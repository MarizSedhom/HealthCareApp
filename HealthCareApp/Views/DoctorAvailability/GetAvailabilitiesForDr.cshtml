@model IEnumerable<HealthCareApp.ViewModel.Doctor.GetAvailabilityForDrVM>

@{
    ViewData["Title"] = "My Availabilities";
    string activeTab = Context.Request.Query["tab"].FirstOrDefault() ?? "all";

    var currentDate = DateTime.Now;

    var filteredAvailabilities = activeTab == "all"
        ? Model
        : Model.Where(item =>
            activeTab == "virtual"
                ? item.type.ToString().Equals("Online", StringComparison.OrdinalIgnoreCase)
                : item.type.ToString().Equals("Offline", StringComparison.OrdinalIgnoreCase)
          ).ToList();
    int num = 0;
    var admin = false;
    if(User.IsInRole("Admin"))
    {
        admin = true;
    }

}

<style>
    :root {
        --doctor-gradient: linear-gradient(135deg, #C5D3E8, #223249);
        --white: #ffffff;
        --light-gray: #f5f5f5;
        --dark-blue: #223249;
        --highlight-blue: #26364d;
        --bg-color-1: #f8f9fa;
        --bg-color-2: #f0f8ff;
        --bg-color-3: #f5fff0;
        --bg-color-4: #fff0f5;
        --virtual-blue: #4e7dc5;
        --danger-red: #dc3545;
    }

    .availability-container {
        min-height: 100vh;
        /* background: linear-gradient(to bottom, var(--light-gray), var(--bg-color-2)); */
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .header-container {
        background: var(--white);
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        padding: 24px;
        margin-bottom: 24px;
    }

    .tabs-container {
        width:400px;
        display: flex;
        gap: 8px;
        background: var(--bg-color-2);
        border-radius: 8px;
        padding: 4px;
        max-width: 400px;
        margin-bottom: 24px;
    }

    .tab-button {
        flex: 1;
        padding: 8px 16px;
        border-radius: 6px;
        border: none;
        background: transparent;
        color: var(--dark-blue);
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        text-align: center;
        text-decoration: none;
    }

        .tab-button.active {
            background: var(--dark-blue);
            color: var(--white);
        }

    .availability-grid {
        display: grid; 
        grid-template-columns: repeat(auto-fill, minmax(400px, 1fr)); 
         justify-content:center; 
         gap: 20px;
         padding:2rem;
        /* display:flex; */
        /* flex-wrap:wrap; */
        /* justify-content:center; */
        /* gap:1rem; */
    }

    .availability-card {
        background: var(--white);
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
        border: 1px solid rgba(197, 211, 232, 0.3);
        padding:1rem;
    }

        .availability-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 16px rgba(0,0,0,0.1);
        }

    .card-header-bar {
        height: 8px;
        background: var(--dark-blue);
    }

        .card-header-bar.virtual {
            background: var(--virtual-blue);
        }

    .card-content {
        padding: 16px;
    }

    .card-footer {
        padding: 16px;
        padding-top: 0;
        background-color: var(--bg-color-2);
    }

    .badge {
        display: inline-flex;
        align-items: center;
        padding: 4px 12px;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 500;
    }

    .badge-today {
        background: #ffefc1;
        color: #8c6d1f;
        font-size: 0.75rem;
    }

    .badge-in-person {
        background: var(--bg-color-2);
        color: var(--dark-blue);
    }

    .badge-virtual {
        background: rgba(78, 125, 197, 0.1);
        color: var(--virtual-blue);
    }

    .utilization-bar {
        height: 4px;
        background: var(--bg-color-2);
        border-radius: 2px;
        overflow: hidden;
    }

    .utilization-progress {
        height: 100%;
    }

    .utilization-high {
        background: #e76f51;
    }

    .utilization-medium {
        background: #f8b04c;
    }

    .utilization-low {
        background: var(--virtual-blue);
    }

    .action-button {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 6px 12px;
        border-radius: 4px;
        font-size: 0.85rem;
        font-weight: 500;
        transition: all 0.2s ease;
        border: 1px solid var(--bg-color-2);
        background: var(--white);
        color: var(--dark-blue);
        text-decoration: none;
    }

        .action-button:hover {
            background: var(--bg-color-2);
        }

    .cancel-button {
        width: auto;
        height: 30px;
        /* border-radius: 40%; */
        display: flex;
        align-items: center;
        justify-content: center;
        background: rgba(220, 53, 69, 0.1);
        color: var(--danger-red);
        border: 1px solid rgba(220, 53, 69, 0.2);
        text-decoration: none;
    }

        .cancel-button:hover {
            background: var(--danger-red);
            color: var(--white);
        }

    .empty-state {
        text-align: center;
        padding: 40px 20px;
    }

    .empty-state-icon {
        background: var(--bg-color-2);
        width: 60px;
        height: 60px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 16px;
    }

    .add-availability-btn {
        background: linear-gradient(to right, var(--dark-blue), #3a4d6d);
        color: var(--white);
        border: none;
        padding: 10px 20px;
        border-radius: 15px;
        font-weight: 500;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        text-decoration: none;
    }

        .add-availability-btn:hover {
            background: linear-gradient(to right, #3a4d6d, var(--dark-blue));
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
            color: var(--white);
        }

    .healthcare-header {
        background: var(--white);
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        padding: 24px;
        margin-bottom: 24px;
        background: var(--doctor-gradient);
    }

    .healthcare-header-admin {
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        padding: 24px;
        margin-bottom: 24px;
        background: linear-gradient(110deg, #C5D3E8 0%, #D0E8C5 30%, #223249 80%);
    }

    .big-card{
        background-color: #96a5ba;
    }

    .big-card-admin {
        background-color: #C5D3E8;
    }
    .real-time-clock {
        background: rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(5px);
        border-radius: 8px;
        padding: 8px 16px;
    }

    .back-link {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        margin-top: 2rem;
        color: var(--patient-green);
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        border: 2px #223249 solid;
    }

        .back-link:hover {
            background-color: #D0E8C5;
            transform: translateX(-5px);
            text-decoration: none;
            color: var(--dark-blue);
            border: none;
        }

</style>


<div class="availability-container">
    <div class="container py-8 px-4 md:px-8 max-w-7xl mx-auto">
		<header class="mt-4 healthcare-header@(admin? "-admin":"")">
        <div class="flex flex-col md:flex-row justify-between items-start md:items-center text-white">
            <div>
                <div class="d-flex justify-content-between">
                    <h1 class="text-3xl font-bold tracking-tight">Availability</h1>

                    <div class="real-time-clock" style="font-size:25px;">
                        <span id="currentTime" class="d-flex align-items-center">@currentDate.ToString("hh:mm tt")</span>
                    </div>
                </div>
                <div class="mt-2 flex items-center space-x-4">
                    <p class="text-blue-100/80" id="currentDate">@currentDate.ToString("dddd, MMMM dd, yyyy")</p>
                </div>
            </div>
        </div>
    </header>
        <a asp-action="AddAvailability" asp-controller="DoctorAvailability" asp-route-id="@ViewBag.DoctorId" class="add-availability-btn mb-3">
            <i class="fas fa-plus"></i> Add New Availability
        </a>
        <div class="header-container big-card@(admin?"-admin":"")">
            <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-6 gap-4">
                <div class="text-white">
                    <h4 class="text-3xl font-bold text-[#223249] tracking-tight">Your Availabilities</h4>
                    <h6 class="text-muted mt-1">Manage your schedule and availability slots</h6>
                </div>

            </div>

            <hr />
            <div class="d-flex justify-content-between">
                <div>

                </div>
           
                <div class="tabs-container">
                    <a href="?tab=all&doctorId=@ViewBag.DoctorId" class="tab-button @(activeTab == "all" ? "active" : "")">All</a>
                    <a href="?tab=in-person&doctorId=@ViewBag.DoctorId" class="tab-button @(activeTab == "in-person" ? "active" : "")">In-Person</a>
                    <a href="?tab=virtual&doctorId=@ViewBag.DoctorId" class="tab-button @(activeTab == "virtual" ? "active" : "")">Virtual</a>
                </div>
            </div>
            

            @if (filteredAvailabilities.Any())
            {
                <div class="">
                    <div class="availability-grid ">
                        @foreach (var availability in filteredAvailabilities)
                        {

                            var isVirtual = availability.type.ToString().Equals("Online", StringComparison.OrdinalIgnoreCase);
                            var totalSlots = availability.AvailableSlotsCnt + availability.AppointmentCnt;
                            var utilizationPercentage = totalSlots > 0
                            ? (availability.AppointmentCnt / (double)totalSlots) * 100
                            : 0;
                            var formattedDate = availability.Date.ToString("MMM dd, yyyy");
                            var isToday = formattedDate == DateTime.Today.ToString("MMM dd, yyyy");

                            <div class="availability-card card ">

                                <div class="card-header-bar @(isVirtual ? "virtual" : "")"></div>




                                <div class="card-content">


                                    <div class="flex justify-between items-start mb-4">
                                        <div>
                                            <div class="d-flex justify-content-between mb-2">
                                                <h3 class="font-semibold text-lg text-[#223249] mb-1 d-inline">@formattedDate</h3>
                                                @if (isToday)
                                                {
                                                    <span class="badge badge-today ml-2">Today</span>
                                                }
                                            </div>

                                            <div class="flex items-center text-[#26364d]/70 text-sm">
                                                <i class="fas fa-calendar-day mr-1"></i>
                                                <span>@availability.dayOfWeek</span>
                                            </div>
                                        </div>
                                        <span class="badge @(isVirtual ? "badge-virtual" : "badge-in-person")">
                                            @availability.type
                                        </span>
                                    </div>

                                    <div class="space-y-3 mb-4">
                                        <div class="flex items-center">
                                            <i class="fas fa-clock text-[#26364d]/70 mr-2"></i>
                                            <div>
                                                <p class="text-sm font-medium">@availability.TimeRange</p>
                                                <p class="text-xs text-[#26364d]/60">@availability.Duration min sessions</p>
                                            </div>
                                        </div>

                                        <div class="flex items-center">
                                            <i class="fas fa-map-marker-alt text-[#26364d]/70 mr-2"></i>
                                            <p class="text-sm">@availability.ClinicName</p>
                                        </div>

                                        <div class="flex items-center">
                                            <i class="fas fa-users text-[#26364d]/70 mr-2"></i>
                                            <div class="w-full">
                                                <div class="flex justify-between mb-1">
                                                    <span class="text-xs text-[#26364d]/70">Slots filled</span>
                                                    <span class="text-xs font-medium">
                                                        @availability.AppointmentCnt/@totalSlots
                                                    </span>
                                                </div>
                                                <div class="utilization-bar">
                                                    <div class="utilization-progress @GetUtilizationClass(utilizationPercentage)"
                                                         style="width: @utilizationPercentage%;"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="card-footer" >
                                    <div class="d-flex justify-content-center gap-2 flex-wrap mt-3">
                                        <a asp-action="ViewSlots" asp-controller="DoctorAvailability"
                                            asp-route-drId="@ViewBag.DoctorId" asp-route-availabilityId="@availability.Id"
                                           class="action-button">
                                            <i class="fas fa-eye mr-1 me-2"></i> View Slots
                                        </a>
                                        <a asp-action="RescheduleAvailability" asp-controller="DoctorAvailability" asp-route-availabilityId="@availability.Id"
                                           class="action-button">
                                            <i class="fas fa-sync-alt mr-1 me-2"></i> Reschedule

                                        </a>
                                    </div>
           
                                        <a href="#"
                                            class="cancel-button mt-2"
                                            title="Cancel"
                                            data-bs-toggle="modal"
                                            data-bs-target="#deleteModal"
                                            data-id="@availability.Id"><i class="fas fa-times me-2"></i>Cancel
                                        </a>

                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="empty-state">
                    <div class="empty-state-icon">
                        <i class="fas fa-calendar text-[#223249] text-2xl"></i>
                    </div>
                    <h3 class="text-xl font-medium text-[#223249] mb-2">No availabilities found</h3>
                    <p class="text-[#26364d]/70 max-w-md mb-6 mx-auto">
                        You don't have any @(activeTab != "all" ? activeTab : "") availabilities scheduled yet.
                    </p>
                    <a asp-action="AddAvailability" asp-controller="DoctorAvailability" asp-route-id="@ViewBag.DoctorId" class="add-availability-btn">
                        <i class="fas fa-plus mr-1"></i> Add New Availability
                    </a>
                </div>
            }
        </div>
        @if (User.IsInRole("Admin"))
        {
            <div class="text-center">

                <a asp-controller="doctor" asp-action="ViewApprovedDoctorsAdmin"
                   class="back-link">
                    <i class="fas fa-arrow-left"></i>
                    Back to Doctor List
                </a>
            </div>

        }
    </div>
</div>

@functions {
    string GetUtilizationClass(double percentage)
    {
        if (percentage > 75) return "utilization-high";
        if (percentage > 50) return "utilization-medium";
        return "utilization-low";
    }
}

<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="CancelDay" method="get">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Cancelation</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to Cancel this Slot?
                    <input type="hidden" name="oldAvailabilityId" id="recordIdToDelete" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-danger">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        var deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var id = button.getAttribute('data-id');
            var input = deleteModal.querySelector('#recordIdToDelete');
            input.value = id;
        });
    </script>

}