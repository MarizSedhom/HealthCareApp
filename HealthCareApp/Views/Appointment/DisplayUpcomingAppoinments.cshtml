@model IEnumerable<HealthCareApp.ViewModel.Appointment.UpcomingAppointmentsVM>

@{
    ViewData["Title"] = "Upcoming Appointments";
    var currentDate = DateTime.Now;
    string activeTab = Context.Request.Query["tab"].FirstOrDefault()?.ToLower() ?? "all";

    var filteredAppointments = activeTab == "all"
        ? Model
        : Model.Where(item =>
            activeTab == "virtual"
                ? item.Mode.ToString().Equals("Online", StringComparison.OrdinalIgnoreCase)
                : item.Mode.ToString().Equals("Offline", StringComparison.OrdinalIgnoreCase)
          ).ToList();

    var admin = false;
    if(User.IsInRole("Admin"))
    {
        admin = true;
    }
}

<style>
    :root {
    --doctor-gradient: linear-gradient(135deg, #C5D3E8, #223249);
    --white: #ffffff;
    --light-gray: #f5f5f5;
    --dark-blue: #223249;
    --highlight-blue: #26364d;
    --virtual-blue: #4e7dc5;
    --danger-red: #dc3545;
    --success-green: #28a745;
    --bg-color-2: #f0f8ff;
    }

    .bg-healthcare-dark-blue {
    background: #223249;
    }

    .healthcare-container {
    min-height: 100vh;
    /* background: linear-gradient(to bottom, var(--light-gray), var(--bg-color-2)); */
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .healthcare-header {
    background: var(--white);
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    padding: 24px;
    margin-bottom: 24px;
    background: var(--doctor-gradient);
    }

    .healthcare-header-admin {
        background: var(--white);
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        padding: 24px;
        margin-bottom: 24px;
        background: linear-gradient(110deg, #C5D3E8 0%, #D0E8C5 30%, #223249 80%);
    }

    .card-admin{
        background: #C5D3E8 !important;
    }

    .filter-tabs {
    width: 400px;
    height: 48px;
    display: flex;
    gap: 8px;
    background: #f0f8ff;
    border-radius: 8px;
    padding: 4px;
    max-width: 400px;
    margin-bottom: 24px;
    }

    .filter-tab {
    flex: 1;
    padding: 8px 16px;
    border-radius: 6px;
    border: none;
    background: transparent;
    color: var(--dark-blue);
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    text-align: center;
    text-decoration: none;
    }

    .filter-tab.active {
    background: var(--dark-blue);
    color: var(--white);
    }

    .appointment-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
    gap: 20px;
    padding: 2rem;
    }

    .appointment-card {
    background: var(--white);
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    transition: all 0.3s ease;
    border: 1px solid rgba(197, 211, 232, 0.3);
    }

    .appointment-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 16px rgba(0,0,0,0.1);
    }

    .card-header-bar {
    height: 8px;
    background: var(--dark-blue);
    }

    .card-header-bar.virtual {
    background: var(--virtual-blue);
    }

    .status-indicator {
    padding: 4px 12px;
    border-radius: 20px;
    font-size: 0.85rem;
    font-weight: 500;
    }

    .status-indicator.paid {
    background: rgba(40, 167, 69, 0.1);
    color: #28a745;
    }

    .status-indicator.pending {
    background: rgba(255, 193, 7, 0.1);
    color: #ffc107;
    }

    .status-indicator.unpaid {
    background: rgba(220, 53, 69, 0.1);
    color: #dc3545;
    }

    .payment-method {
    background: rgba(78, 125, 197, 0.1);
    color: var(--virtual-blue);
    padding: 4px 12px;
    border-radius: 20px;
    font-size: 0.85rem;
    }

    .action-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 6px 12px;
    border-radius: 4px;
    font-size: 0.85rem;
    font-weight: 500;
    transition: all 0.2s ease;
    border: 1px solid #f0f8ff;
    background: var(--dark-blue);
    color: var(--white);
    width:auto;
    text-decoration: none;
    }

    .action-button:hover {
    background: #C5D3E8;
    color:var(--dark-blue);
    }

    .cancel-button {
    background: rgba(220, 53, 69, 0.1);
    color: var(--danger-red);
    border: 1px solid rgba(220, 53, 69, 0.2);
    border-radius:50%;
    }

    .cancel-button:hover {
    background: var(--danger-red);
    color: var(--white);
    }

    .empty-state {
    text-align: center;
    padding: 40px 20px;
    grid-column: 1 / -1;
    }

    .empty-state-icon {
    background: var(--bg-color-2);
    width: 60px;
    height: 60px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 16px;
    }

    .real-time-clock {
    background: rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(5px);
    border-radius: 8px;
    padding: 8px 16px;
    }

    .badge {
    display: inline-flex;
    align-items: center;
    padding: 4px 12px;
    border-radius: 20px;
    font-size: 1rem;
    font-weight: 500;
    }

    /* .badge-today { */
    /*     background: #ffefc1; */
    /*     color: #8c6d1f; */
    /*     font-size: 0.75rem; */
    /* } */


    .badge.offline {
    background: var(--bg-color-2);
    color: var(--dark-blue);
    }

    .badge.online {
    background: rgba(78, 125, 197, 0.1);
    color: var(--virtual-blue);
    }

    .healthcare-border {
    border-color: #C5D3E8 !important;
    border-radius: 1rem;
    }

    .today-badge {
    background: #ffefc1;
    color: #8c6d1f;
    padding: 0.25rem 0.75rem;
    border-radius: 1rem;
    font-size: 0.875rem;
    font-weight: 500;
    }

    .card-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: #223249;
    }

    .card-subtitle {
    font-size: 0.875rem;
    color: #6c757d !important;
    margin-bottom: 0.5rem;
    }

    .card-footer {
    padding: 16px;
    padding-top: 0;
    background-color: var(--bg-color-2);
    }

    .back-link {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        margin-top: 2rem;
        color: var(--patient-green);
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        border: 2px #223249 solid;
    }

        .back-link:hover {
            background-color: #D0E8C5;
            transform: translateX(-5px);
            text-decoration: none;
            color: var(--dark-blue);
            border: none;
        }
</style>

<div class="healthcare-container">
    <div class="container mx-auto py-8 px-4 md:px-8 max-w-7xl">
		<header class=" mt-4 healthcare-header@(admin?"-admin":"")">
            <div class="flex flex-col md:flex-row justify-between items-start md:items-center text-white">
                <div>
                    <div class="d-flex justify-content-between">
                        <h1 class="text-3xl font-bold tracking-tight">Upcoming Appointments</h1>
                        <div class="real-time-clock" style="font-size:25px;">
                            <span id="currentTime" class="d-flex align-items-center">@currentDate.ToString("hh:mm tt")</span>
                        </div>
                    </div>
                    <div class="mt-2 flex items-center space-x-4">
                        <p class="text-blue-100/80" id="currentDate">@currentDate.ToString("dddd, MMMM dd, yyyy")</p>
                    </div>
                </div>
            </div>
        </header>

		<div class=" shadow rounded-4 border-0 mt-4 card@(admin?"-admin":"")" style="background-color: #96a5ba;">
            <div class="card-body">
                <div class="text-white p-3">
                    <h5 class="card-title text-start text-white">Your Schedule</h5>
                    <h6 class="card-subtitle mb-2 text-muted text-start">Managing your appointments with ease</h6>
                    <hr />
                </div>

                <div class="d-flex justify-content-between mt-2 mb-3 p-3">
                    <div>
                        <h3 class="text-2xl font-bold healthcare-dark-blue mb-1">
                            Upcoming Appointments
                            <span class="ml-2 bg-healthcare-dark-blue rounded-circle  rounded-full text-white p-2 px-3">
                                @filteredAppointments.Count()
                            </span>
                        </h3>
                        <p class="text-gray-500 text-sm">Displaying <span id="filterCount">@filteredAppointments.Count()</span> of @Model.Count() appointments</p>
                    </div>

                    <div class="filter-tabs">
                        <a href="?tab=all&doctorId=@ViewBag.DoctorId" class="filter-tab @(activeTab == "all" ? "active" : "")">All</a>
                        <a href="?tab=in-person&doctorId=@ViewBag.DoctorId" class="filter-tab @(activeTab == "in-person" ? "active" : "")">In-Person</a>
                        <a href="?tab=virtual&doctorId=@ViewBag.DoctorId" class="filter-tab @(activeTab == "virtual" ? "active" : "")">Virtual</a>

                    </div>
                </div>

                <div class="appointment-grid">
                    @foreach (var item in filteredAppointments.OrderBy(app => app.Date).ThenBy(app => app.Time))
                    {
                        var isToday = item.Date.ToString("MMM dd, yyyy") == DateTime.Today.ToString("MMM dd, yyyy");

                        <div class="appointment-card p-3" data-mode="@item.Mode.ToString().ToLower()">
                            <div class="card-header-bar @(item.Mode.ToString() == "Online" ? "virtual" : "")"></div>

                            <div class="p-6">
                                <div class="d-flex justify-content-between  mb-4">
                                    <div>
                                        <h3 class="text-lg font-bold text-[#223249] mt-3">@item.PatientName</h3>
                                        <p class="text-sm text-muted"><i class="fas fa-phone mt-0 mr-2 text-[#4e7dc5] pe-2"></i>@item.PatientPhone</p>
                                    </div>
                                    <div>
                                        <span class="badge @item.Mode.ToString().ToLower() mt-3">
                                            @item.Mode
                                        </span>
                                    </div>
                                </div>


                                <div class="row mb-4">
                                    <!-- Date Card -->
                                    <div class="col-12 col-md-6 mb-3 mb-md-0">
                                        <div class="card h-100 border healthcare-border shadow-sm">
                                            <div class="card-body d-flex flex-column justify-content-around">
                                                <div class="d-flex justify-content-between">
                                                    <div >
                                                        <h6 class="card-subtitle text-muted">Date</h6>
                                                        <h4 class="card-title mt-0">@item.Date.ToString("M/d/yyyy")</h4>
                                                    </div>
                                                    <div >
                                                        @if(isToday)
                                                        {
                                                            <span class="badge today-badge">Today</span>
                                                            
                                                        }
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Time Card -->
                                    <div class="col-12 col-md-6">
                                        <div class="card h-100 border healthcare-border shadow-sm">
                                            <div class="card-body mt-2">
                    
                                                <h6 class="card-subtitle text-muted">Time</h6>
                                                <h4 class="card-title ">@item.Time</h4>
                                          
                                            </div>
                                        </div>
                                    </div>
                                </div>


                                <div class="d-flex flex-wrap justify-content-end gap-2 mb-4">
                                    <span class="status-indicator @item.paymentStatus.ToString().ToLower()">
                                        @item.paymentStatus
                                    </span>
                                    <span class="payment-method">
                                        @item.paymentMethod
                                    </span>
                                </div>

                                <div class="card-footer">
                                    <div class="d-flex justify-content-center gap-2 mt-3 ">
                                        <a href="@Url.Action("DisplayPatientInfoForDoctor", "Patient", new { patientId = item.PatientId , doctorId=ViewBag.DoctorId })"
										   class="action-button w-100">
                                            <i class="fas fa-user-circle mr-2"></i>
                                            Patient Info
                                        </a>
                                        
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                    @if (!filteredAppointments.Any())
                    {
                        <div class="empty-state">
                            <div class="empty-state-icon">
                                <i class="fas fa-calendar text-[#223249] text-2xl"></i>
                            </div>
                            <h3 class="text-xl font-medium text-[#223249] mb-2">No appointments found</h3>
                            <p class="text-[#26364d]/70 max-w-md mb-6 mx-auto">
                                You don't have any @(activeTab != "all" ? activeTab : "") appointments scheduled yet.
                            </p>
                        </div>
                    }
                </div>
            </div>
        </div>
        @if (User.IsInRole("Admin"))
        {<div class="text-center">
            <a asp-controller="doctor" asp-action="ViewApprovedDoctorsAdmin"
               class="back-link">
                <i class="fas fa-arrow-left"></i>
                Back to Doctor List
            </a>

        </div>
          }
    </div>
</div>

@functions {
    private string GetFriendlyDay(DateOnly date)
    {
        if (date == DateOnly.FromDateTime(DateTime.Now)) return "Today";
        if (date == DateOnly.FromDateTime(DateTime.Now).AddDays(1)) return "Tomorrow";
        return date.DayOfWeek.ToString();
    }
}

@section Scripts {
    <script>
        // Real-time clock
        function updateClock() {
            const now = new Date();
            document.getElementById('currentTime').textContent =
                now.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' });
            document.getElementById('currentDate').textContent =
                now.toLocaleDateString('en-US', { weekday: 'long', month: 'long', day: 'numeric', year: 'numeric' });
        }

        setInterval(updateClock, 1000);
        updateClock();

        // Filter functionality
        function updateFilterCount() {
            const visibleCards = document.querySelectorAll('.appointment-card:not([style*="display: none"])').length;
            document.getElementById('filterCount').textContent = visibleCards;
        }

       

        // Initialize from URL parameters
        window.addEventListener('DOMContentLoaded', () => {
            const urlParams = new URLSearchParams(window.location.search);
            const mode = urlParams.get('tab') || 'all';
            filterAppointments(mode);
        });
    </script>
}