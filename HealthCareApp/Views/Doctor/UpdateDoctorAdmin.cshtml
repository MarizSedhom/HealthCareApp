@model HealthCareApp.ViewModel.Doctor.AdminUpdateDrVM

@{
    ViewData["Title"] = "UpdateDoctorAdmin";
    var GenderList = Enum.GetValues(typeof(Gender))
    .Cast<Gender>()
    .Select(s => new
    {
        Id = (int)s,
        Name = s.ToString()
    });
    var TitleList = Enum.GetValues(typeof(Title))
    .Cast<Title>()
    .Select(s => new
    {
        Id = (int)s,
        Name = s.ToString()
    });
}

<style>
    :root {
        --admin-gradient: linear-gradient(110deg, #C5D3E8 0%, #D0E8C5 30%, #223249 80%);
        --admin-gradient-2: linear-gradient(to right, #D0E8C5, #C5D3E8);
        --admin-dark: #223249;
        --admin-light: #D0E8C5;
        --accent-blue: #C5D3E8;
        --success-green: #28a745;
        --error-red: #dc3545;
        --warning-yellow: #ffc107;
        --neutral-gray: #6c757d;
        --focus-shadow: rgba(34, 50, 73, 0.2);
        --border-color: #C5D3E8;
        --white: #ffffff;
    }

    .edit-doctor-container {
        max-width: 900px;
        margin: 2rem auto;
        padding: 2rem;
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        border-top: 4px solid var(--admin-dark);
    }

    .form-header {
        text-align: center;
        margin-bottom: 2rem;
        padding-bottom: 1rem;
        position: relative;
    }

        .form-header::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 25%;
            width: 50%;
            height: 3px;
            background: var(--admin-gradient);
            border-radius: 3px;
        }

    .form-title {
        color: var(--admin-dark);
        font-weight: 600;
        font-size: 2rem;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }

    .icon-primary {
        color: var(--admin-dark);
    }

    .doctor-form {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .form-row {
        display: flex;
        gap: 1.5rem;
    }

    .form-column {
        flex: 1;
    }

    .form-group {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        margin-bottom: 1rem;
    }

    .form-label {
        font-weight: 500;
        color: var(--admin-dark);
        font-size: 0.95rem;
    }

    .form-control, .form-select {
        border: 2px solid var(--border-color);
        border-radius: 8px;
        padding: 0.75rem 1rem;
        transition: all 0.3s ease;
        font-size: 1rem;
        width: 100%;
        background-color: rgba(197, 211, 232, 0.05);
    }

        .form-control:focus, .form-select:focus {
            border-color: var(--admin-dark);
            box-shadow: 0 0 0 3px var(--focus-shadow);
            outline: none;
            background-color: white;
        }

    .form-select {
        appearance: none;
        background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%23223249' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right 1rem center;
        background-size: 1em;
    }

    .validation-message {
        color: var(--error-red);
        font-size: 0.875rem;
    }

    .validation-summary-errors ul {
        list-style: none;
        padding-left: 0;
        margin: 0;
    }

    .validation-summary-errors, .alert-danger {
        background-color: rgba(220, 53, 69, 0.1);
        border: 1px solid var(--error-red);
        border-left: 4px solid var(--error-red);
        border-radius: 4px;
        padding: 1rem;
        margin-bottom: 1.5rem;
    }

    .form-actions {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-top: 2rem;
    }

    .btn {
        padding: 0.75rem 2rem;
        border-radius: 8px;
        border: none;
        font-weight: 500;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 8px;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background: var(--admin-gradient-2);
        color: var(--admin-dark);
        box-shadow: 0 4px 6px rgba(34, 50, 73, 0.2);
    }

        .btn-primary:hover {
            background: var(--admin-dark);
            transform: translateY(-2px);
            box-shadow: 0 6px 10px rgba(34, 50, 73, 0.3);
            color: white;
        }

    .back-link {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        margin-top: 2rem;
        color: var(--admin-dark);
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        border: 2px solid var(--admin-dark);
    }

        .back-link:hover {
            background-color: var(--admin-light);
            transform: translateX(-5px);
            text-decoration: none;
            color: var(--admin-dark);
            border: none;
        }

    textarea.form-control {
        min-height: 120px;
        resize: vertical;
    }

    .input-group {
        display: flex;
    }

    .input-group-text {
        display: flex;
        align-items: center;
        padding: 0.75rem 1rem;
        background-color: rgba(197, 211, 232, 0.2);
        border: 2px solid var(--border-color);
        border-radius: 8px 0 0 8px;
        border-right: none;
    }

    .input-group .form-control {
        border-radius: 0 8px 8px 0;
    }

    /* Profile Picture Styling */
    .profile-section {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-bottom: 2rem;
    }

    .profile-picture-container {
        position: relative;
        margin-bottom: 1rem;
    }

    .profile-picture-preview {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        border: 3px solid var(--admin-dark);
        object-fit: cover;
        transition: all 0.3s ease;
    }

    .profile-picture-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border-radius: 50%;
        background: rgba(34, 50, 73, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        opacity: 0;
        transition: opacity 0.3s ease;
        cursor: pointer;
    }

        .profile-picture-overlay i {
            color: white;
            font-size: 2rem;
        }

    .profile-picture-container:hover .profile-picture-overlay {
        opacity: 1;
    }

    .doctor-name {
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--admin-dark);
        margin: 0.5rem 0;
    }

    .file-link {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        color: var(--admin-dark);
        text-decoration: none;
        padding: 0.5rem;
        border-radius: 4px;
        background-color: rgba(197, 211, 232, 0.2);
        margin-top: 0.5rem;
        transition: all 0.3s ease;
    }

        .file-link:hover {
            background-color: var(--accent-blue);
        }

    @@media (max-width: 768px) {

        .form-row {
            flex-direction: column;
            gap: 0;
        }

        .edit-doctor-container {
            padding: 1.5rem;
            margin: 1rem;
        }

        .form-actions {
            gap: 1rem;
        }

        .btn {
            width: 100%;
            justify-content: center;
        }
    }
</style>

<div class="edit-doctor-container">
    <div class="form-header">
        <h1 class="form-title">
            <i class="fas fa-user-md icon-primary"></i>
            Update Doctor Profile
        </h1>
    </div>

    <form asp-action="UpdateDoctorAdmin" enctype="multipart/form-data" class="doctor-form">
        <div asp-validation-summary="All" class="text-danger"></div>

        <div class="profile-section">
            <div class="profile-picture-container">
                <label for="ProfilePicture">
                    @if (!string.IsNullOrEmpty(Model.CurrentPicturePath))
                    {
                        <img src="@Model.CurrentPicturePath" alt="Profile Picture" class="profile-picture-preview" />
                    }
                    else
                    {
                        <div class="profile-picture-preview d-flex align-items-center justify-content-center"
                             style="background-color: rgba(197, 211, 232, 0.3);">
                            <i class="fas fa-user-md fa-3x" style="color: var(--admin-dark);"></i>
                        </div>
                    }
                    <div class="profile-picture-overlay">
                        <i class="fas fa-camera"></i>
                    </div>
                </label>
                <input type="file" asp-for="ProfilePicture" id="ProfilePicture" class="d-none" accept="image/*" />
            </div>
            <span asp-validation-for="ProfilePicture" class="validation-message"></span>
            <small class="text-muted">Click on image to change</small>
            <h2 class="doctor-name">@($"{Model.Title}. {Model.FirstName} {Model.LastName}")</h2>
        </div>

        <!-- Personal Information -->
        <div class="form-row">
            <div class="form-column">
                <div class="form-group">
                    <label asp-for="FirstName" class="form-label">First Name</label>
                    <input asp-for="FirstName" class="form-control" />
                    <span asp-validation-for="FirstName" class="validation-message"></span>
                </div>
            </div>

            <div class="form-column">
                <div class="form-group">
                    <label asp-for="LastName" class="form-label">Last Name</label>
                    <input asp-for="LastName" class="form-control" />
                    <span asp-validation-for="LastName" class="validation-message"></span>
                </div>
            </div>
        </div>

        <div class="form-row">
            <div class="form-column">
                <div class="form-group">
                    <label asp-for="DateOfBirth" class="form-label">Date of Birth</label>
                    <input asp-for="DateOfBirth" type="date" class="form-control" />
                    <span asp-validation-for="DateOfBirth" class="validation-message"></span>
                </div>
            </div>

            <div class="form-column">
                <div class="form-group">
                    <label asp-for="gender" class="form-label">Gender</label>
                    <select asp-for="gender" class="form-select" asp-items="@(new SelectList(GenderList,"Id","Name"))">
                        <option value="">Select gender</option>
                    </select>
                    <span asp-validation-for="gender" class="validation-message"></span>
                </div>
            </div>
        </div>

        <div class="form-row">
            <div class="form-column">
                <div class="form-group">
                    <label asp-for="Title" class="form-label">Title</label>
                    <select asp-for="Title" class="form-select" asp-items="@(new SelectList(TitleList,"Id","Name"))">
                        <option value="">Select title</option>
                    </select>
                    <span asp-validation-for="Title" class="validation-message"></span>
                </div>
            </div>

            <div class="form-column">
                <div class="form-group">
                    <label asp-for="ExperienceYears" class="form-label">Years of Experience</label>
                    <input asp-for="ExperienceYears" class="form-control" />
                    <span asp-validation-for="ExperienceYears" class="validation-message"></span>
                </div>
            </div>
        </div>

        <!-- Professional Information -->
        <div class="form-group">
            <label asp-for="Description" class="form-label">Professional Description</label>
            <textarea asp-for="Description" class="form-control" rows="4"></textarea>
            <span asp-validation-for="Description" class="validation-message"></span>
        </div>

        <div class="form-group">
            <label asp-for="verificationFileFromDr" class="form-label">Verification Document</label>
            <input asp-for="verificationFileFromDr" class="form-control" type="file" />
            <span asp-validation-for="verificationFileFromDr" class="validation-message"></span>
            @if (Model.CurrrentverificationPath != null)
            {
                <a href="@Model.CurrrentverificationPath" target="_blank" class="file-link">
                    <i class="fas fa-file-medical"></i> View Current Verification File
                </a>
            }
        </div>

        <div class="form-row">
            <div class="form-column">
                <div class="form-group">
                    <label asp-for="SelectedSpecialization" class="form-label">Specialization</label>
                    <select asp-for="SelectedSpecialization" class="form-select" asp-items="@(new SelectList(Model.Specializations,"Id","Name"))">
                        <option value="">Select specialization</option>
                    </select>
                    <span asp-validation-for="SelectedSpecialization" class="validation-message"></span>
                </div>
            </div>

            <div class="form-column">
                <div class="form-group">
                    <label asp-for="SelectedSubSpecializations" class="form-label">Sub-Specialization</label>
                    <select asp-for="SelectedSubSpecializations" class="form-select" asp-items="@(new SelectList(Model.SubSpecializationsList,"Id","Name"))">

                    </select>
                    <span asp-validation-for="SelectedSubSpecializations" class="validation-message"></span>
                </div>
            </div>
        </div>

        <div class="form-row">
            <div class="form-column">
                <div class="form-group">
                    <label asp-for="Fees" class="form-label">Consultation Fee</label>
                    <div class="input-group">
                        <span class="input-group-text">$</span>
                        <input asp-for="Fees" class="form-control" />
                    </div>
                    <span asp-validation-for="Fees" class="validation-message"></span>
                </div>
            </div>

            <div class="form-column">
                <div class="form-group">
                    <label asp-for="WaitingTimeInMinutes" class="form-label">Average Waiting Time</label>
                    <div class="input-group">
                        <input asp-for="WaitingTimeInMinutes" class="form-control" />
                        <span class="input-group-text" style="border-left: none; border-right: 2px solid var(--border-color); border-radius: 0 8px 8px 0;">minutes</span>
                    </div>
                    <span asp-validation-for="WaitingTimeInMinutes" class="validation-message"></span>
                </div>
            </div>
        </div>


        <input asp-for="doctorId" hidden />


        <div class="form-actions">
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-save"></i> Save Changes
            </button>
            <a asp-action="ViewApprovedDoctorsAdmin" class="back-link">
                <i class="fas fa-arrow-left"></i> Back to Doctor List
            </a>
        </div>
    </form>
</div>

@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Profile picture preview handling
            const profilePictureInput = document.getElementById('ProfilePicture');
            let profilePicturePreview = document.querySelector('.profile-picture-preview');

            profilePictureInput.addEventListener('change', function(e) {
                if (e.target.files && e.target.files[0]) {
                    const reader = new FileReader();

                    reader.onload = function(event) {
                        if (profilePicturePreview.tagName === 'IMG') {
                            profilePicturePreview.src = event.target.result;
                        } else {
                            // Replace the placeholder div with an img element
                            const img = document.createElement('img');
                            img.src = event.target.result;
                            img.className = 'profile-picture-preview';

                            profilePicturePreview.parentNode.replaceChild(img, profilePicturePreview);
                            profilePicturePreview = img; // Update reference
                        }
                    };

                    reader.readAsDataURL(e.target.files[0]);
                }
            });

            // Specialization-SubSpecialization dependency
            $("#SelectedSpecialization").change(function() {
                var selectedSpecialization = $(this).val();
                var subSpecializationsDropdown = $("#SelectedSubSpecializations");

                subSpecializationsDropdown.empty();

                if (selectedSpecialization) {
                    $.ajax({
                        url: '/SubSpecialization/GetSubSpecialization',
                        type: 'GET',
                        data: { SelectedSpecialization: selectedSpecialization },
                        success: function(response) {
                            $.each(response, function(index, subSpecialization) {
                                subSpecializationsDropdown.append(
                                    $('<option></option>')
                                        .val(subSpecialization.id)
                                        .text(subSpecialization.name)
                                );
                            });
                        },
                        error: function(xhr, status, error) {
                            console.error("Error fetching sub-specializations:", error);
                        }
                    });
                }
            });
        });
    </script>
}