@using HealthCareApp.ViewModel.Clinic
@model ClinicCreateVM

@{
    ViewData["Title"] = "Update Clinic";
    var admin = false;
    if(User.IsInRole("Admin"))
    {
	    admin = true;
    }

}

<style>
    :root {
        --doctor-gradient: linear-gradient(135deg, #C5D3E8, #223249);
        --dark-blue: #223249;
        --light-blue: #C5D3E8;
        --hover-blue: rgba(197, 211, 232, 0.3);
        --update-gradient: linear-gradient(to right, #2b6cb0, #2c5282);
    }

    .edit-clinic-container {
        background: linear-gradient(to bottom, #f5f5f5 0%, #e8eff8 100%);
        min-height: 100vh;
        padding: 2rem 1rem;
    }

    .form-card {
        background: white;
        border-radius: 0.5rem;
        box-shadow: 0 1px 3px rgba(0,0,0,0.12);
        padding: 2rem;
        max-width: 600px;
        margin: 0 auto;
    }

    .form-header {
        background: var(--doctor-gradient);
        color: white;
        padding: 1.5rem;
        border-radius: 0.5rem 0.5rem 0 0;
        margin: -2rem -2rem 2rem -2rem;
    }

    .form-header-admin {
        background: linear-gradient(110deg, #C5D3E8 0%, #D0E8C5 30%, #223249 80%);
        color: white;
        padding: 1.5rem;
        border-radius: 0.5rem 0.5rem 0 0;
        margin: -2rem -2rem 2rem -2rem;
    }

    .form-label {
        color: var(--dark-blue);
        font-weight: 600;
        margin-bottom: 0.5rem;
        display: block;
    }

    .form-control-custom {
        border: 1px solid #C5D3E8;
        border-radius: 0.375rem;
        padding: 0.5rem 1rem;
        width: 100%;
        transition: all 0.2s ease;
    }

        .form-control-custom:focus {
            border-color: var(--dark-blue);
            box-shadow: 0 0 0 3px rgba(34, 50, 73, 0.1);
            outline: none;
        }

    .btn-update-custom {
        background: linear-gradient(to right, var(--dark-blue), #3a4d6d);
        color: white;
        padding: 0.75rem 1.5rem;
        border: none;
        border-radius: 0.375rem;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        cursor: pointer;
    }

    .btn-update-custom-admin {
        background: linear-gradient(to right, #D0E8C5, #C5D3E8);
        color: white;
        padding: 0.75rem 1.5rem;
        border: none;
        border-radius: 0.375rem;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        cursor: pointer;
    }

        .btn-update-custom:hover {
            background: linear-gradient(to right, #3a4d6d, var(--dark-blue));
            transform: translateY(-1px);
        }

    .btn-update-custom-admin:hover {
        background: #223249;
        transform: translateY(-1px);
        color:white;
    }
    .back-link {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        margin-top: 2rem;
        color: var(--dark-blue);
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s;
        padding: 0.5rem 1rem;
        border-radius: 8px;
    }

        .back-link:hover {
            background-color: var(--hover-blue);
            transform: translateX(-5px);
            text-decoration: none;
        }

    .back-link-admin {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        margin-top: 2rem;
        color: var(--dark-blue);
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s;
        padding: 0.5rem 1rem;
        border-radius: 8px;
    }

        .back-linkadmin:hover {
            background-color: var(--hover-blue);
            transform: translateX(-5px);
            text-decoration: none;
        }

    .button-group {
        margin-top: 2rem;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .text-danger {
        font-size: 0.875rem;
        margin-top: 0.25rem;
        display: block;
    }

    .back-link-admin {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        margin-top: 2rem;
        color: var(--patient-green);
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        border: 2px #223249 solid;
    }

        .back-link-admin:hover {
            background-color: #D0E8C5;
            transform: translateX(-5px);
            text-decoration: none;
            color: var(--dark-blue);
            border: none;
        }

    .map-container {
        margin: 1.5rem 0;
        border-radius: 0.5rem;
        overflow: hidden;
        border: 2px solid var(--light-blue);
    }

    #map {
        height: 400px;
        width: 100%;
    }

    .map-instructions {
        font-size: 0.9rem;
        margin-bottom: 0.5rem;
        color: #555;
        font-style: italic;
    }

    .coordinates-display {
        display: flex;
        justify-content: space-between;
        background: #f8f9fa;
        padding: 0.5rem;
        border-radius: 0.25rem;
        margin-top: 0.5rem;
        font-size: 0.85rem;
        color: #666;
    }
</style>

<div class="edit-clinic-container">
    <div class="form-card">
        <div class="form-header@(admin?"-admin":"")">
            <h3 style="margin: 0; font-size: 1.5rem;">
                <i class="fas fa-building mr-2"></i>
                Update Clinic
            </h3>
            <p style="margin: 0.5rem 0 0; opacity: 0.9;">Modify clinic details below</p>
        </div>

        <form asp-action="Edit" asp-route-page="@ViewBag.CurrentPage">
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="doctorId" />
            <input type="hidden" asp-for="ClinicLocation.KeyId" />
            <input type="hidden" asp-for="ClinicLocation.X" id="lng" />
            <input type="hidden" asp-for="ClinicLocation.Y" id="lat" />

            <div class="form-group mb-4">
                <label asp-for="Name" class="form-label">Clinic Name</label>
                <input asp-for="Name" class="form-control-custom" placeholder="Enter clinic name" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group mb-4">
                <label asp-for="ClinicAddress" class="form-label">Address</label>
                <input asp-for="ClinicAddress" class="form-control-custom" placeholder="Enter clinic address" />
                <span asp-validation-for="ClinicAddress" class="text-danger"></span>
            </div>

            <div class="form-group mb-4">
                <label asp-for="SelectedCityId" class="form-label">City</label>
                <select asp-for="SelectedCityId" class="form-control-custom" asp-items="@(new SelectList(Model.cities,"Id","Name"))">
                    <option value="">Select City</option>
                </select>
                <span asp-validation-for="SelectedCityId" class="text-danger"></span>
            </div>

            <div class="form-group mb-4">
                <label asp-for="SelectedRegionId" class="form-label">Region</label>
                <select asp-for="SelectedRegionId" class="form-control-custom" asp-items="@(new SelectList(Model.regions,"Id","Name"))">
                    <option value="">Select Region</option>
                </select>
                <span asp-validation-for="SelectedRegionId" class="text-danger"></span>
            </div>

            <div class="form-group mb-4">
                <label asp-for="ClinicPhoneNumber" class="form-label">Phone Number</label>
                <input asp-for="ClinicPhoneNumber" class="form-control-custom" placeholder="Enter phone number" />
                <span asp-validation-for="ClinicPhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-group mb-4">
                <label class="form-label">Clinic Location</label>
                <p class="map-instructions">Click on the map or drag the marker to set your clinic's location</p>
                <div class="map-container">
                    <div id="map"></div>
                </div>
                <div class="coordinates-display">
                    <span>Latitude: <strong id="display-lat">--</strong></span>
                    <span>Longitude: <strong id="display-lng">--</strong></span>
                </div>
            </div>
            <div class="button-group">
                <button type="submit" class="btn-update-custom@(admin?"-admin":"")">
                    <i class="fas fa-save"></i>
                    Save Changes
                </button>
            </div>
            <div class="text-center">
                <a asp-action="GetDoctorClinics"
                   asp-route-doctorId="@Model.doctorId"
                   asp-route-page="@ViewBag.CurrentPage"
                   class="back-link@(admin?"-admin":"")">
                    <i class="fas fa-arrow-left"></i>
                    Back to Clinic List
                </a>

            </div>
        </form>
            @if (User.IsInRole("Admin"))
            {
                <a asp-controller="doctor" asp-action="ViewApprovedDoctorsAdmin"
                   class="back-link-admin">
                    <i class="fas fa-arrow-left"></i>
                    Back to Doctor List
                </a>

            }
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            $("#SelectedCityId").change(function () {
                var CityId = $(this).val();
                if (CityId) {
                    $.ajax({
                        url: '/Clinic/GetRegions',
                        type: 'GET',
                        data: { CityId: CityId },
                        success: function (response) {
                            var RegionDropdown = $("#SelectedRegionId");
                            RegionDropdown.empty();
                            RegionDropdown.append('<option value="">Select a region</option>');
                            $.each(response, function (index, region) {
                                RegionDropdown.append(
                                    $('<option></option>').val(region.id).text(region.name)
                                );
                            });
                        },
                        error: function (xhr, status, error) {
                            alert("Error fetching regions: " + error);
                        }
                    });
                } else {
                    $("#SelectedRegionId").empty().append('<option value="">Select a region</option>');
                }
            });
        });

         // Google Maps integration
        function initMap() {
            var lat = Number($("#lat").val()) || 0;
            var lng = Number($("#lng").val()) || 0;

            // Default to a central location if no coordinates are set
            if (lat === 0 || lng === 0) {
                lat = 30.0444;  // Default latitude (Cairo)
                lng = 31.2357;  // Default longitude (Cairo)
            }

            // Update the coordinate display
            updateCoordinateDisplay(lat, lng);

            var mapOptions = {
                center: { lat: lat, lng: lng },
                zoom: 12,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                mapTypeControl: true,
                fullscreenControl: true,
                streetViewControl: false
            };

            var map = new google.maps.Map(document.getElementById("map"), mapOptions);

            var marker = new google.maps.Marker({
                position: { lat: lat, lng: lng },
                map: map,
                draggable: true,
                animation: google.maps.Animation.DROP
            });

            // Click event on map to move marker
            google.maps.event.addListener(map, "click", function (event) {
                marker.setPosition(event.latLng);
                updatePositionData(event.latLng);
            });

            // Drag event on marker
            marker.addListener("dragend", function () {
                updatePositionData(marker.getPosition());
            });

            // Handle window resize to keep map responsive
            google.maps.event.addDomListener(window, "resize", function() {
                google.maps.event.trigger(map, "resize");
                map.setCenter(marker.getPosition());
            });

            function updatePositionData(position) {
                $("#lat").val(position.lat());
                $("#lng").val(position.lng());
                updateCoordinateDisplay(position.lat(), position.lng());
            }
        }

        function updateCoordinateDisplay(lat, lng) {
            // Format coordinates to 6 decimal places
            $("#display-lat").text(lat.toFixed(6));
            $("#display-lng").text(lng.toFixed(6));
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=@Model.ClinicLocation.KeyId&callback=initMap" defer></script>
}